<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="pers.train.ticket.dao.TicketOrderMapper" >
  <resultMap id="BaseResultMap" type="pers.train.ticket.model.TicketOrder" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="tic_id" property="ticId" jdbcType="INTEGER" />
    <result column="tic_no" property="ticNo" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, tic_id, tic_no, create_date, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ticket_bought_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ticket_bought_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="pers.train.ticket.model.TicketOrder" >
    insert into ticket_bought_order (id, user_id, tic_id, 
      tic_no, create_date, status
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{ticId,jdbcType=INTEGER}, 
      #{ticNo,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="pers.train.ticket.model.TicketOrder" >
    insert into ticket_bought_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="ticId != null" >
        tic_id,
      </if>
      <if test="ticNo != null" >
        tic_no,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="ticId != null" >
        #{ticId,jdbcType=INTEGER},
      </if>
      <if test="ticNo != null" >
        #{ticNo,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="pers.train.ticket.model.TicketOrder" >
    update ticket_bought_order
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="ticId != null" >
        tic_id = #{ticId,jdbcType=INTEGER},
      </if>
      <if test="ticNo != null" >
        tic_no = #{ticNo,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="pers.train.ticket.model.TicketOrder" >
    update ticket_bought_order
    set user_id = #{userId,jdbcType=INTEGER},
      tic_id = #{ticId,jdbcType=INTEGER},
      tic_no = #{ticNo,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>